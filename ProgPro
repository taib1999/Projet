/*----------------------------------------------------------------
  TAIB BAOULKACEM
Le projet de produire un jeu pratique dans le projet
que j'ai partagé avec faysal ezzin consiste à écrire le code de
programme du jeu et Faisal attribue la composante visuelle du jeu.
------------------------------------------------------------------
Ce texte a été écrit depuis le début de l'histoire et 05/12/2019 je l'ai 
terminé par une date 28/12/2019, c'est un beau jeu en termes de jeu, mais 
long en termes d'écriture de code.
------------------------------------------------------------------
Le jeu soulève un ensemble de questions appartenant uniquement au
 domaine des mathématiques et de l'information et calcule toutes 
 les opérations liées à chaque question et analyse les tâches et 
 affiche les résultats et y inclut également une source et des 
 informations sur le jeu vraiment pour moi un jeu dont je suis 
 fier parce que j'en ai beaucoup appris.
------------------------------------------------------------------
Je l'ai utilisé la programmation c comme:
-les variables     -les pointeurs  
-les matres        -les structures
-tableau dynamique -les tableus
-les fichier       -les fonction
-les boucles        -les structures conditionnel
-Logécail Div c++
-----------------------------------------------------------------
*/
/*!! Les commentaires commencent à comprendre le code. !!*/

//les longage micro-processeur
#include <stdio.h>
#include <stdlib.h>
#include <math.h>
/*Processus visant à faciliter le calcul des exposants.*/
#define CARRE(x) ((x)*(x))
/*  Structure pour le tiroir de date, nom, point et privilège dans le tableau de différents types.*/
    typedef struct{
  	int anne;
  	int moi;
  	int jeur;
  	//appel
  	/*age nombre[100];*/
  }age;
  
  typedef struct{
  	char nom[12];
  	age nombre[100];
  	char valeu[12];
  	int note;
  	//appel
  	/*Personne Pers;*/
  }Personne;
  //déclaration un fichier que on va utilisez dans tout le programme;
  FILE* p=NULL;
   
/*~~~~~~~~!! Programme principal !!~~~~~~~~~~~~~~é*/    
int main()
   {
   	  /*====== Déclaration des variables et des structeur  ======*/
   	  Personne Pers[100];
   	  int z,a,b,d,e,f,g,max,s;
   	  float c;
   	   //crée un fichier contenant les données des joueurs;
   	   p= fopen("les informaction et résultats.txt","w");
       fprintf(p,"\nles résultats des qection :\n_\n");
    //Initialisation des variables
   	     g=0;
		 z=0;
		 s=0;
		 //Présentation du jeu et accueil des joueurs et de la façon de jouer.
		 printf("\n- Hi, this application asks you 10 questions \nthat you answer by choosing the correct answer;\n you can play it as a group or an individual.\n");
   	    //Demandez le nombre de joueurs.
		 printf("\n- Give me the number of people who will play this game.: \n");
   	      scanf("%d",&b);
   	      //Effacez l'écran.
   	      system("cls");
   	      
   	      for(a=0;a<b;a++)
   	        {
   	        	/*Entrez toutes les informations pour tous les joueurs, y compris le nom et la date d'augmentation, en utilisant la structure.*/
   	            printf("---Configure the game :---\n");
   	            printf("~~~ For player number: %d !!~~~\n",a+1);
              	printf("Enter your  information\n--Enter your  name.\n");
            	scanf("%s",Pers[a].nom);
   	            printf("\nClick on the increase date. !!anne/moi/jeur!!\n");
   	            scanf("%d",&Pers[a].nombre[a].anne); 
   	            scanf("%d",&Pers[a].nombre[a].moi);
   	            scanf("%d",&Pers[a].nombre[a].jeur);
   	            system("cls");	
			}
	/*do while pour : Pour rejouer le jeu à partir d'une question sans effacer les joueurs et ressaisir leurs informations.*/
   	 do{
   	 	 /*---z : Une variable qui se déplace entre les dix questions et convertit la valeur en points de la fonction au programme de base.---*/
		 z=0;
		 printf("\n---The beginning of the game.---\n");
       /*~~~~Le début des questions.~~~~*/
      //qection 1:~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      // for pour :Répétez la même question pour le nombre de joueurs et enregistrez le point dans leur portfolio
      for(a=0;a<b;a++)
         {
         	//Réglage variable avec valeurs initiales.
         	Pers[a].note=0;
         	z=0;
         	s=0;
         	/*---La fenêtre supérieure contient des informations sur la question et le jeu auquel la question a été posée et son point.---*/
         	 printf("\n---quction 1---!!For player number: %d \n[personne][age][note][the level]\n",a+1);
	    	printf("[%s][%d][%d]",Pers[a].nom,2020-Pers[a].nombre[a].anne,Pers[a].note);
	    	valeur(&z);
         	//Appelez fonction du question 1 et nous lui envoyons la valeur initiale de z
			question1(&z,&s);
			//Échangez le nouveau z et mettez-le dans le portefeuille de la personne.
            Pers[a].note=z;
            system("cls");
                 if(s==1)
                    {
                    	fprintf(p,"%s :question 1 la note et %d: vrai \t\t",Pers[a].nom,z);
					}
				  else
				     {
				     	fprintf(p,"%s :question 1 note et %d: feux \t\t",Pers[a].nom,z);
					 }
            //Nous retournons la valeur de z à la valeur initiale pour que le prochain joueur puisse en profiter.
			z=0;
			s=0;
		 } fprintf(p,"\n");
	   //quetion 2 :~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	   for(a=0;a<b;a++)
         {   
             s=0;
             printf("\n\n---quction 2---!!For player number: %d \n[personne][age][note][the level]\n",a+1);
	    	 printf("[%s][%d][%d]",Pers[a].nom,2020-Pers[a].nombre[a].anne,Pers[a].note);
         	 //Nous donnons à z la valeur en points de la personne en question à utiliser dans le processus actuel, c'est-à-dire ajouter 1 dans le cas de la bonne réponse.
			 z=Pers[a].note;
			 valeur(&z);
             question2(&z,&s);
             //Nous récupérons la nouvelle valeur de z et la donnons à la personne en question.
             Pers[a].note=z;
             if(s==1)
                    {
                    	fprintf(p,"%s :question 2 la note et %d: vrai\t\t",Pers[a].nom,z);
					}
				  else
				     {
				     	fprintf(p,"%s :question 2 note et %d: feux \t\t",Pers[a].nom,z);
					 }
			s=0;
             system("cls");
             z=0;
         }fprintf(p,"\n");
        //quetion 3 :~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        for(a=0;a<b;a++)
         {
         	s=0;
         	printf("\n\n---quction 3---!!For player number: %d \n[personne][age][note][the level]\n",a+1);
	    	printf("[%s][%d][%d]",Pers[a].nom,2020-Pers[a].nombre[a].anne,Pers[a].note);
         	 z=Pers[a].note;
         	 valeur(&z);
		     question3(&z,&s);
             Pers[a].note=z;
             system("cls");
                 if(s==1)
                    {
                    	fprintf(p,"%s :question 3 la note et %d: vrai\t\t",Pers[a].nom,z);
					}
				  else
				     {
				     	fprintf(p,"%s :question 3 note et %d: feux \t\t",Pers[a].nom,z);
					 }
             z=0;
             s=0;
         }fprintf(p,"\n");
        //quetion 4 :~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
        for(a=0;a<b;a++)
         { 
            s=0;
         	printf("\n\n---quction 4---!!For player number: %d \n[personne][age][note][the level]\n",a+1);
	    	printf("[%s][%d][%d]",Pers[a].nom,2020-Pers[a].nombre[a].anne,Pers[a].note);
         	 z=Pers[a].note;
         	 valeur(&z);
		     question4(&z,&s);
             Pers[a].note=z;
             system("cls");
                if(s==1)
                    {
                    	fprintf(p,"%s :question 4 la note et %d: vrai\t\t",Pers[a].nom,z);
					}
				  else
				     {
				     	fprintf(p,"%s :question 4 note et %d: feux \t\t",Pers[a].nom,z);
					 }
             z=0;
             s=0;
         }fprintf(p,"\n");
		//quetion 5 :~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
        for(a=0;a<b;a++)
         {
         	 s=0;
         	printf("\n\n---quction 5---!!For player number: %d \n[personne][age][note][the level]\n",a+1);
	    	printf("[%s][%d][%d]",Pers[a].nom,2020-Pers[a].nombre[a].anne,Pers[a].note);
         	 z=Pers[a].note;
         	 valeur(&z);
		     question5(&z,&s);
             Pers[a].note=z;
                 if(s==1)
                    {
                    	fprintf(p,"%s :question 5 la note et %d: vrai\t\t",Pers[a].nom,z);
					}
				  else
				     {
				     	fprintf(p,"%s :question 5 note et %d: feux \t\t",Pers[a].nom,z);
					 }
             system("cls");
             z=0;
             s=0;
         }fprintf(p,"\n");
		//quetion 6 :~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
        for(a=0;a<b;a++)
         {
         	 s=0;
         	printf("\n\n---quction 6---!!For player number: %d \n[personne][age][note][the level]\n",a+1);
	    	printf("[%s][%d][%d]",Pers[a].nom,2020-Pers[a].nombre[a].anne,Pers[a].note);
         	 z=Pers[a].note;
         	 valeur(&z);
	       	 question6(&z,&s);
             Pers[a].note=z;
             system("cls");
                if(s==1)
                    {
                    	fprintf(p,"%s :question 6 la note et %d: vrai\t\t",Pers[a].nom,z);
					}
				  else
				     {
				     	fprintf(p,"%s :question 6 note et %d: feux \t\t",Pers[a].nom,z);
					 }
             z=0;
             s=0;
         }fprintf(p,"\n");
		//quetion 7 :~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
        for(a=0;a<b;a++)
         {
         	s=0;
         	 printf("\n\n---quction 7---!!For player number: %d \n[personne][age][note][the level]\n",a+1);
	    	printf("[%s][%d][%d]",Pers[a].nom,2020-Pers[a].nombre[a].anne,Pers[a].note);
         	 z=Pers[a].note;
         	 valeur(&z);
	     	 question7(&z,&s);
             Pers[a].note=z;
             system("cls");
                 if(s==1)
                    {
                    	fprintf(p,"%s :question 7 la note et %d: vrai\t\t",Pers[a].nom,z);
					}
				  else
				     {
				     	fprintf(p,"%s :question 7 note et %d: feux \t\t",Pers[a].nom,z);
					 }
             z=0;
             s=0;
         }fprintf(p,"\n");
		//quetion 8 :~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        for(a=0;a<b;a++)
         {
         	 s=0;
         	printf("\n\n---quction 8---!!For player number: %d \n[personne][age][note][the level.]\n",a+1);
	    	printf("[%s][%d][%d]",Pers[a].nom,2020-Pers[a].nombre[a].anne,Pers[a].note);
         	 z=Pers[a].note;
         	 valeur(&z);
		     question8(&z,&s);
		     Pers[a].note=z;
             system("cls");
                  if(s==1)
                    {
                    	fprintf(p,"%s :question 8 la note et %d: vrai\t\t",Pers[a].nom,z);
					}
				  else
				     {
				     	fprintf(p,"%s :question 8 note et %d: feux \t\t",Pers[a].nom,z);
					 }
             z=0;
             s=0;
         }fprintf(p,"\n");
        //quetion 9 :~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
        for(a=0;a<b;a++)
         {
         	 s=0;
         	 printf("\n\n---quction 9---!!For player number: %d \n[personne][age][note][the level]\n",a+1);
	    	 printf("[%s][%d][%d]",Pers[a].nom,2020-Pers[a].nombre[a].anne,Pers[a].note);
         	 z=Pers[a].note;
         	 valeur(&z);
		     question9(&z,&s);
	    	 Pers[a].note=z;
             system("cls");
                 if(s==1)
                    {
                    	fprintf(p,"%s :question 9 la note et %d: vrai\t\t",Pers[a].nom,z);
					}
				  else
				     {
				     	fprintf(p,"%s :question 9 note et %d: feux \t\t",Pers[a].nom,z);
					 }
             z=0;
             s=0;
         }fprintf(p,"\n");
        //quetion 10 :~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        
	    for(a=0;a<b;a++)
         { 
           s=0;
         	printf("\n\n---quction 10---!!For player number: %d \n[personne][age][note][the level]\n",a+1);
	    	printf("[%s][%d][%d]",Pers[a].nom,2020-Pers[a].nombre[a].anne,Pers[a].note);
         	 z=Pers[a].note;
         	 valeur(&z);
		     question10(&z,&s);
	       	 Pers[a].note=z;
		     system("cls");
		         if(s==1)
                    {
                    	fprintf(p,"%s :question 10 la note et %d: vrai\t\t",Pers[a].nom,z);
					}
				  else
				     {
				     	fprintf(p,"%s :question 10 note et %d: feux \t\t",Pers[a].nom,z);
					 }
		     z=0;
		     s=0;
	     }
		 fprintf(p,"\n");
		 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	     /*---------------//Fin des questions.//------------------*/
		printf("\n\n---game over.---\n");
		/*Tableau de toutes les informations, toutes les personnes, points et privilèges.*/
	    printf("\nles résultats est :\n_ [personne][age][anne][moi][jeur][note][the level]\n");
	    fprintf(p,"\nles résultats est :\n_[personne][age][anne][moi][jeur][note][the level]\n");
		     for(a=0;a<b;a++)
                {
                	    z=0;
                	    z=Pers[a].note;
                	         /*remplisser les résultats dans un fichier*/
                	         if(p== NULL)
                	          {
				                  printf("ce fichier n'existe pas.\n");
		                      }
		                     else
							  {
							    fprintf(p,"\n- [%s][ %d][ %d ][%d ][ %d ][ %d ]",Pers[a].nom,2020-Pers[a].nombre[a].anne,Pers[a].nombre[a].anne,Pers[a].nombre[a].moi,Pers[a].nombre[a].jeur,Pers[a].note);
		                        //Apelle le processus qui définit le privilège par points pour remplisser le résultat dans le ficheir.
							    fvaleur(&z);
							  }
                		printf("[%s][%d][%d][%d][%d][%d]",Pers[a].nom,2020-Pers[a].nombre[a].anne,Pers[a].nombre[a].anne,Pers[a].nombre[a].moi,Pers[a].nombre[a].jeur,Pers[a].note);
                		//Apelle le processus qui définit le privilège par points.
						valeur(&z);
						z=0;
						
							
                }fclose(p);
                printf("\n- Point information is now available in the file in which the application is stored. !!-\n");	
		//Calculez la moyenne.
		f=0;
		    /*Tout d'abord, calculez la somme des points.*/
		      for(a=0;a<b;a++)
                {
                	f=f+Pers[a].note; 
                }
        /* c : la moyenne.*/
		c=((f)/b);
		printf("\n--Point rate is-- : %f\n",c);
		//Déterminez le gagnant et le point le plus élevé.
		 /*--Je cherche juste le point le plus haut entre les points.--*/
		max=0;
		      for(a=0;a<b;a++)
                {
                    if(Pers[a].note>max) 
					  {
					    max=Pers[a].note;
					    //Localisez le point le plus haut du tableau pour extraire toutes les informations du détenteur du point le plus haut.
						e=a;	
					  }  	
                }
                printf("\n!!The accomplished person is.!! :\n");
                printf("\n[personne][age][anne][moi][jeur][note][the level]\n");
                /* e et :Nous l'utilisons à la place de mon père, où se trouvent les informations du gagnant, et nous les affichons.*/
                printf("[%s][%d][%d][%d][%d][%d]",Pers[e].nom,2020-Pers[e].nombre[e].anne,Pers[e].nombre[e].anne,Pers[e].nombre[e].moi,Pers[e].nombre[e].jeur,Pers[e].note);
                z=0;
				z=Pers[e].note;
				//Nous donnons son point à z et le remettons à ce processus pour nous donner son avantage.
                valeur(&z);
		//fin de programme.Fin du jeu..
		/*Les dernières opérations des paramètres sont présentées au joueur, voulez-vous quitter le jeu ou rester et jouer à nouveau et voulez-vous des informations sur l'application.*/
		printf("\n- If you want to leave the game, press. 1 !!\n- If you want to play again, press. 2\n- If you want to see a source and information about the game, press. 3: \n");
		scanf("%d",&g);
		    if(g==3)
		       { 
		            /*Dans le cas d'un joueur qui souhaite des informations sur l'application, ce code crée un fichier sur son ordinateur et y écrit des informations.*/
			       system("cls");
			       FILE *fichier = NULL;
			       /*Créez d'abord un fichier.*/
                   fichier = fopen("source de programme.txt","w");
                  if(fichier == NULL)
                    {
				      printf("ce fichier n'existe pas.\n");
		            }
		          else{
		          	    /*Cela place le texte dans le fichier que vous avez créé.*/
		   	            fputs("This game is produced by TAIB ABOULKACEM and FAYSAL EZZIN urges the development\nof the stadium, Mohammed EL-Hajji,\nwhich is a project for programming C semestre 1\nin universiter ibne zohre LE-info anne universire 2020/2019\n",fichier);
		              }
		              /*Nous vous offrons de la joie, voulez-vous jouer ou perfide?*/
		       	printf("Look at the file in which the application was placed and put the source file and application information in it-!! fichair source de programme.txt !! ");
		       	printf("\n- If you want to leave the game, press. 1 !!\n- If you want to play again, press. 2 !!\n");
	              scanf("%d",&g);
			   }
			
		    /*La fin des paramètres et du jeu, et à la fin l'application recherchée est g = 1; Mon père lui remettra la demande d'inscription par le joueur quand il choisira de partir, P sera atteint pendant la fin du jeu, en cas de contraire, la loi ne sera pas réalisée pendant qu'il rejouera.*/
			system("cls");
		
     }while(g!=1);
     
   }
/*++++++++++++++++++++++ !! mais fonction !! ++++++++++++++++++++++*/
   /*------------------------------------------------*/
   int question1(int *z,int *s)
     {  
         /* *z : Nous recevons la valeur de z. /- Nous désignons les variables que nous utiliserons dans le processus.*/
     	int A,a,c,b,e,f,g;
     	float d;
            //Nous donnons les valeurs stables et initiales des variables.
            c=1024;  
			a=1000;
			         //Nous donnons les calculs dont nous aurons besoin entre les variables.
		        	 b=c*a;
		     	     d=a/c;
		        	 g=a*1000;
			                               
             	               printf("\n\n1)- What is equal to %d GO converting it to a value MO ?\n\n1)- %fMo;\n2)- %dMO;\n3)- %dMO;\n4)- %dMO;\n!--Choose the correct answer number.--!\n",a,d,b,g,c);
          	                   /*La question donne des choix et vous donne également la possibilité de changer une variable pour ce qui est plus facile pour vous et de restaurer les opérations sur votre variable comme nous le verrons dans la prochaine.*/
							   printf("\n!- Do you want help or an opportunity to change the meaning of the question into easy tools for you click on :0.\n");
								 scanf("%d",&f);
								 if(f==2)
								 {
								 	/*Dans le cas où la réponse est correcte car la bonne réponse après les opérations nous la mettons à la place du n ° 2 et dans le cas où le joueur a entré le chiffre 2, sa demande 1 dépasse la valeur précédente du point de la personne en question et que nous avons livrée à z pour se promener avec.*/
								 	*z=*z+1;
								 	 *s=1;
								 }
								 else{
								 	if(f==0){
								 	system("cls");
								 	/*Si le joueur entre le nombre 0, nous lui donnons de changer la valeur du nombre de son choix.*/
								 	printf("\n- Give the numbers you choose and want to convert to. Mo in GO :\n");
								 	scanf("%d",&a);
								 	//Nous retournons les opérations au nouveau numéro.
								 	b=c*a;
		     	                    d=a/c;
		                        	 g=a*1000;
		                        	 system("cls");
		                        	 printf("\n\n---quction 1---\n");
		                        	 //En descendant ici, nous avons présenté la question différemment et changé la place de la bonne réponse parmi les options.
								 	printf("\n\n1)- What is equal to %d MO converting it to a value GO ?\n\n1)- %dGO;\n2)- %dGO;\n3)- %dGO;\n4)- %dGO;\n!--Choose the correct answer number.--!\n",a,d,b,g,c);
							    	 scanf("%d",&f);
							    	 if(f==1)
								     {
								        *z=*z+1;
								        *s=1;
							     	 }
							     	 //Nous essayons un foi ou joueur de changer la variable.
								 
								 }
								 }				 
     }
   /*------------------------------------------------*/
   int question2(int *z,int *s)
   {
   	 //Configurez les variables.
   	 int a,b,c,e,f;
   	 float d,X1,X2,B1,B2,g;
   	 /*Utilisez un tableau dynamique.*/
   	 int *fix=malloc(10*sizeof(int));
   	   //Valeurs initiales.
	   a=3;
	   b=1;
	   c=2;
	   //Calculer le delta 
	   d=(CARRE(b)-(4*a*c));
          //Déterminer les solutions possibles de l'équation.
	          if( d==0)
			  {
			     X1=((-b)/(2*a));
			     X2=X1;
			     /* fix[] : Correction, nous donnons la valeur de l'option sélectionnée correcte dans le cas où l'équation accepte ces solutions dans cette boucle.*/
			     fix[0]=1;
			  }
			  else{
			  	if(d>0)
			  {
			  	g=sqrt(d);
			     X1=(((-b)-(g))/(2*a));
                 X2=(((-b)+(g))/(2*a));
                 //la même chose.
			     fix[0]=1;
			  }
			  else{
			  	/*Dans le cas où les deux lois précédentes ne seraient pas respectées, la solution se trouve dans la quatrième option que la question soulève.*/
			  	fix[0]=4;
			  }
			  
			  }
			  
			  
              
              /*D'autres options ont tort de le mettre parmi les options.*/
              B1=(((-b)-(d))/2*a);
              B2=(((-b)+(d))/2*a);
            
	  
		printf("\n\n2)- What are the solutions of the following equation !!%dX^2+%dX+%d=0!! among the suggestions?",a,b,c);
		printf("\n1)- X1=%f ;X2=%f\n2)- X1=%f ;X2=%f\n3)- X1=%d ;X2=%d",X1,X2,B1,B2,c,b); 
		//Le joueur peut choisir d'autres valeurs et changer l'équation en ce qu'il aime.
	    printf("\n4)- X1=(-%d+i*sqrt(delta))/2*%d ;X2=(-%d-i*sqrt(dilta))/2*%d\n5)- If you want to fonction the process easier for you.\n",b,a,b,a);
	    scanf("%d",&f);
	    if(f==fix[0])
	     {
	     	/*Dans le cas où le choix du joueur est égal à l'une des valeurs que nous avons définies pour la bonne réponse, l'application augmente le point pour la personne concernée.*/
	     	*z=*z+1;
	     	*s=1;
		 }
		 else
		 {
		 	if(f==5)
		 	{     
		 	   system("cls");
		 	   // Dans les cas où le joueur choisit de changer l'équation, donnez-lui de changer les valeurs caractéristiques de l'équation.
		 	   printf("\n- I give the values you want to a ,b et c :\n");
		 	   scanf("%d%d%d",&a,&b,&c);
               system("cls");
               //Nous répétons les opérations de la même manière.
               	   d=(CARRE(b)-(4*a*c));
              if( d==0)
			  {
			     X1=((-b)/(2*a));
			     X2=X1;
			     fix[0]=3;
			  }
			  else{
			  	if(d>0)
			  {
			  	g=sqrt(d);
			     X1=(((-b)-(g))/(2*a));
                 X2=(((-b)+(g))/(2*a));
			     fix[0]=3;
			  }
			  else{
			  	fix[0]=4;
			  }
			  
			  }
		
            
              B1=(((-b)-(d))/(2*a));
              B2=(((-b)+(d))/(2*a));
            
	     system("cls");
	     printf("\n\n---quction 2---\n");
		printf("\n\n2)- What are the solutions of the following equation !!%dX^2+%dX+%d=0!! among the suggestions?",a,b,c);
		//Nous avons changé la position de la bonne réponse par rapport à celle qui avait d'abord oublié la question.
		printf("\n1)- X1=%d ;X2=%d\n2)- X1=%f ;X2=%f\n3)- X1=%f ;X2=%f",c,b,B1,B2,X1,X2);    
	    printf("\n4)- X1=(-%d+i*sqrt(delta))/2*%d ;X2=(-%d-i*sqrt(dilta))/2*%d\n",b,a,b,a);
	    scanf("%d",&f);	
		if(f==fix[0])
	     {
		    *z=*z+1;
		    *s=1;
		 }	 		
			 }
		 }
		 //Supprimez toutes les valeurs que le tableau contient pour une nouvelle utilisation.
		 free(fix);
   }
 /*----------------------------------------------------------------------------*/
   int question3(int *z,int *s)
      {
	      int a;
	      /*Une question simple qui soulève 4 options et un type d'application informatique: si le bon choix est fait, le joueur concerné augmente.*/
           printf("\n\n3)- On any type of application, refer something <pptx> ?\n");
           printf("1)- fichier word\n2)- fichier exel\n3)- fichier pawrpoint\n4)- image\n");
           scanf("%d",&a);
           if(a==3)
            {
            	*z=*z+1;
            	*s=1;
			}
      }
 /*----------------------------------------------------------------------------*/
   int question4(int *z,int *s)
      {
      	//Initialisation des variables.
      	int b,c,d;
      	float PI,surface,surface1,a,rayon;
         //Valeurs initiales.
	  	PI=3,14;
      	b=10;
      	//Opérations nécessaires.
      	rayon=b/2;
      	a=rayon/100;
      	surface=a*a*PI;
      	surface1=rayon*rayon*PI;
		printf("\n\n4)- What is the area of  circle with a diameter of %dcm in meters^2\n",b);
		/*Nous posons la question avec choix et la possibilité d'assistance.*/
		printf("\n1)-S=%f \n2)- S=%f \n3)- S=%f ;\n4)- S=%d \n5)- Asked assistant.!!\n",surface,a,surface1,b*b);
		scanf("%d",&c);
		if(c==1)
		  {
		  	//Si la réponse est correcte.
		  	*z=*z+1;
		  	*s=1;
		  }
		else
		  { 
		    //En cas de demande d'aide.
		  	if(c==5)
	         {
	         	
	         	system("cls");
	         	/*Nous donnons trois paramètres tels que changer la variable ou donner des relations que nous utiliserons dans la même question ou changer l'unité requise de la question.*/
	           printf("\n- Ed you want to forward the diameter of the circle press. 1\n- If you want the relationships to be used, press. 2\n- If you want to give space in cm ^ 2, press. 3:\n");
			   scanf("%d",&d);
			      if(d==2)
			        {   
			           system("cls");
			           printf("\n\n---quction 4---\n");
			           //Dans le cas de demandes de relations, nous donnons des relations. La même question a été posée, la position de réponse correcte changeant.
			        	printf("\nrayon=diameter/2\n1cm=0,01m\nsurface=rayon*rayon*3,14;\n");
			        	printf("\n\n4)- What is the area of circle with a diameter of %dcm in meters^2\n",b);
                		printf("1)-S=%f \n2)- S=%f \n3)- S=%f ;\n4)- S=%d \n",b*b,a,surface1,surface);
	                	scanf("%d",&c);
	                	if(c==4)
		                 {
		                 	*z=*z+1;
		                 	*s=1;
	                 	  }
					}
				  else
				   {
				   	  if(d==1)
				   	    {
				   	    	system("cls");
				   	    	//Si la variable change et lui donne une autre valeur.
				   	    	printf("\n- Give the size you want for the diameter.");
				   	    	scanf("%d",&b);
				   	    	//Renvoie les mêmes opérations à la nouvelle variable.
		                    rayon=b/2;
                        	a=rayon/100;
                        	surface=a*a*PI;
                            system("cls");
					    	surface1=rayon*rayon*PI;
					    	printf("\n\n---quction 4---\n");
					    	//Posez la question et changez la position de la bonne réponse.
	                     	printf("\n\n4)- What is the area of circle with a diameter of %dcm in meters^2\n",b);
	                    	printf("1)-S=%f \n2)- S=%f \n3)- S=%f ;\n4)- S=%d \n",a,surface,surface1,b*b);
                       		scanf("%d",&c);
	                           	if(c==2)
		                            {
		                                *z=*z+1;
		                                *s=1;
		                            }		   	    	
					    }
					 else
					   {
					   	if(d==3)
					   	  {
					   	  	  //Dans le cas où le joueur souhaite choisir la bonne réponse dans une unité facile.
		                            PI=3,14;
                                  	b=10;
                                 	rayon=b/2;
                                 	//Nous répétons les opérations par rapport à la nouvelle unité et faisons des choix.
                                 	a=rayon;
                                	surface=a*a*PI;
                                 	surface1=rayon*rayon*PI;
                                 	system("cls");
                                 	printf("\n\n---quction 4---\n");
	                            	printf("\n\n4)- What is the area of circle with a diameter of %dcm in cm^2",b);
	                            	//Nous repositionnons la bonne réponse.
	                               	printf("1)-S=%f \n2)- S=%f \n3)- S=%f ;4)- S=%d \n",surface1,a,surface,b*b);
	                             	scanf("%d",&c);
	                            	if(c==3)
		                             {
		                             	*z=*z+1;
		                             	*s=1;
		                             }			   	       	
						  }
					   }
				   }
			 }
		    	
		  }
		
      }
 /*----------------------------------------------------------------------------*/
   int question5(int *z,int *s)
      {   
          int a;
      	 //quetion 5 :
      	 //Un ordinateur peut-il fonctionner sans disque dur si un joueur choisit de ne pas ajouter de point à son portefeuille?
		printf("\n\n5)- Can I use and operate a computer without a hard disk ?\n");
		printf("1)- oui.\n2)- non.\n");
		scanf("%d",&a);
		  if(a==2)
		    {
		    	*z=*z+1;
		    	*s=1;
			}
       
      }
 /*----------------------------------------------------------------------------*/
   int question6(int *z,int *s)
      {
      	 int i,b[8],a,c,d;
      	 c=0;
         //quetion 6 :
         /*Je complète le sujet de la disposition des tables.*/
         int t[8]={9,11,4,7,6,3,8,20};
         int n;
         n=8;
		printf("\n\n6)- Fill out the table with the following numbers [%d][%d][%d][%d][%d][%d][%d][%d] in incremental order\n",t[0],t[1],t[2],t[3],t[4],t[5],t[6],t[7]);
		//Je suggère que vous puissiez créer votre propre horaire et organiser ou organiser l'horaire proposé.
        printf("\n- If you want to arrange this tour, press. 0:\n- If you want to create your schedule and order, click. 1:\n");
        scanf("%d",&d);
            if(d==0)
               {
               	    		for(i=0;i<n;i++)
                              {
                              	//Entrez les numéros dans l'ordre.
                                	printf("t[%d]=",i);
         	                        scanf("%d",&b[i]);
		                      }
		                    for(i=0;i<n;i++)
		                      {
		                      	//Affiche les chiffres tels qu'ils ont été saisis par le joueur.
		                          printf("[%d]",b[i]);
                              }
                            /*---/Appelez le processus qui organise le calendrier et envoyez-lui le calendrier et le nombre d'éléments de la table./---*/	     
	                         tri_selection(t,n);
	                        for(i=0;i<n;i++)
                               {
                               	/*Testez si l'arrangement que l'opération lui a donné le même arrangement que le joueur lui a donné dans le cas de lui-même augmente le point dans son portefeuille.*/
			                     if(t[i]==b[i])
			                        {
			                           // c et :- Le nombre de cellules du tableau est égal. Dans le cas où elles sont toutes égales, alors c est égal au nombre de colonnes du tableau. Si les deux sont égales, l'ordre est correct et le joueur lui donne un point.
			                           c=c+1;    	
				                    }  
	                           } 
	                        if(c==n)
	                          {
	                          	//Dans le cas du nombre de Khanat qui contiennent le même nombre égal au nombre de Khanat Al-Tabdulo signifie que les deux tables sont égales et signifie que l'arrangement est correct et que nous recevons un point à jouer.
	                         	*z=*z+1;
	                         	*s=1;
			                  }
			   }
			else
			   {
			        if(d==1)
			           {
			           	   system("cls");
			           	   //Remplissez votre horaire.
			           	   printf("\nFill in the table randomly\n");
			           	     for(i=0;i<n;i++)
                              {
                              	//Choisissez des nombres aléatoires pour les trier.
                                	printf("!!randomly.!! t[%d]=",i);
         	                        scanf("%d",&t[i]);
		                      }
		                      system("cls");
		                      printf("\n\n---quction 6---\n");
		                      /*La question B présente la nouvelle valeur du tableau.*/
		                      printf("\n\n6)- Fill out the table with the following numbers [%d][%d][%d][%d][%d][%d][%d][%d] in incremental order\n",t[0],t[1],t[2],t[3],t[4],t[5],t[6],t[7]);
			     /*-------------------------------------------------------*/
                            //Nous répétons les mêmes opérations et on ne nous a pas donné le joueur de recréer leur propre horaire.
						   for(i=0;i<n;i++)
                              {
                                	printf("t[%d]=??",i);
         	                        scanf("%d",&b[i]);
		                      }
		                    for(i=0;i<n;i++)
		                      {
		                          printf("[%d]",b[i]);
                              }	     
	                         tri_selection(t,n);
	                        for(i=0;i<n;i++)
                               {
			                     if(t[i]==b[i])
			                        {
			                           c=c+1;    	
				                    }  
	                           } 
	                        if(c==n)
	                          {
	                         	*z=*z+1;
	                         	*s=1;
			                  } 
			     /*--------------------------------------------------------*/
					   }
			   }
	 
	  }
 /*----------------------------------------------------------------------------*/
   int question7(int *z,int *s)
      {
      	int a;
      	//quetion 7 :
      	//Trois définitions différentes, l'une d'elles est correcte, au cas où je choisirais le bon joueur, vous lui donnez un point.
        printf("\n\n7)- Choose the correct suggestion number from among the following suggestions on a story informatique");
        printf("\n1)- RAM :non volatil\n2)- ROM :mémoire morte \n3)- premier ordinateur :??\n!--Choose the correct answer.--!\n");
        scanf("%d",&a);
           if(a==2)
              {
              	 *z=*z+1;
              	 *s=1;
			  }
		    //définition de RAM ROM le premier ordinateur
      }
 /*----------------------------------------------------------------------------*/
   int question8(int *z,int *s)
      {
      	  int a,b;
      	 //quetion 8 :
      	 /*---/question du Transferts./---*/
		printf("\n\n8)- Using the triple relationship in the following example, find the value of X.");
		//Ici, le joueur est compté en utilisant les relations qui lui sont présentées, et il nous donne l'analyse que nous lui avons demandée, et nous lui donnons la possibilité d'aider.
		printf("\nGiga-octet=1024Mega-octet\nTera-octat=1024Giga-octet\nMega-octet=1024Kilo-octet\nKilo-octet=1024octet:\n!! 3Mo=!X!Go !!\nX=??\n- !! For help, press: 1 !!--There are block conversions and lengths--!!");
		scanf("%d",&a);
		   if(a==3072)
		       {
		       	//Si la réponse est correcte.
		       	  *z=*z+1;
		       	  *s=1;
			   }
			else
			 {
			 	if(a==1)
			 	{
			 		//En cas de demande d'aide, nous lui demandons de lui donner des transferts dans le domaine des longueurs ou du domaine de la masse.
			 	  system("cls");
			 	  printf("- Do you choose length conversions, press. 1\n- Do you choose block conversions, press. 2");
			   	  scanf("%d",&b);
			   	  if(b==1)
			   	     {
			   	     	
			   	     	system("cls");
			   	     	printf("\n\n---quction 8---\n");
			   	     	/*Dans le cas où il choisit les longueurs, nous lui donnons les relations utilisées et lui demandons de se convertir en utilisant les trois relations.*/
			   	     	printf("\n\n8)- Using the triple relationship in the following example, find the value of X.");
                 		printf("\n:1000m=1Km\n!! 1259km=!X!m !!\nX=??\n");
                 		scanf("%d",&a);
		                  if(a==1259000)
		                     {
		                    	  *z=*z+1;
		                    	  *s=1;
			                 }
				     }
				  else
				     {
				     	if(b==2)
				     	  {
				               system("cls");
				               printf("\n\n---quction 8---\n");
				               //Dans le cas où l'idéal choisit, nous lui donnons les relations utilisées et lui demandons de se convertir en utilisant les trois relations.
			   	                   	printf("\n\n8)- Using the triple relationship in the following example, find the value of X.");
                               		printf("\n:1000g=1Kg\n!! 12Kg=!X!g !!\nX=??\n");
                 		             scanf("%d",&a);
		                              if(a==12000)
		                                {
		                    	           *z=*z+1;
		                    	           *s=1;
			                            }
				                    	  	
						  }
					 }
				}
			   	 
			 }
      }
 /*----------------------------------------------------------------------------*/
   int question9(int *z,int *s)
      {
      	   //quetion 9 :
      	   int a,b;
      	   a=9;
      	   //Une question d'information concernant le choix par rapport au nombre écrit binier.
		printf("\n\n9)- For the number %d, base ten is given as the base value of binaire\n",a);
		printf("1)-0101\n2)-1000\n3)-1010\n4)-1001");
		scanf("%d",&b);
		if(b==3)
		  {
		  	*z=*z+1;
		  	*s=1;
		  }
      }
 /*----------------------------------------------------------------------------*/
   int question10(int *z,int *s)
      {
      	//quetion 10 :
      	//Utilisation de matrice.
      	int mat[100][100],i,j,tro[100][100],a,b;
      	//L'utilisation de Matris est suggérée.
      	mat[0][0]=3;
      	mat[0][1]=4;
      	mat[0][2]=5;
      	mat[1][0]=1;
      	mat[1][1]=8;
      	mat[1][2]=2;
      	mat[2][0]=6;
      	mat[2][1]=7;
      	mat[2][2]=4;
      	//Matrice suggérée à bloquer.
		tro[0][0]=4;
      	tro[0][1]=7;
      	tro[0][2]=6;
      	tro[1][0]=2;
      	tro[1][1]=8;
      	tro[1][2]=1;
      	tro[2][0]=5;
      	tro[2][1]=4;
      	tro[2][2]=3;
		printf("\n\n10)- What is the conversion of the third matrix between the two proposals?\n");
		//Nous vous demandons de transférer cette matrice.
		  for(i=0;i<3;i++)
		    {
		    	printf("\n");
		    	for(j=0;j<3;j++)
		    	   {
		    	   	//Spectacle matriciel.
		    	   	printf("[%d]",mat[i][j]);
				   }
			}
			/*---/Nous calculons la convertie matricielle./---*/
			a=i;
			i=j;
			j=a;
			printf("\n\n\n1)-\n");
			/*---/Nous affichons la matrice convertie./---*/
			for(i=0;i<3;i++)
		    {
		    	printf("\n");
		    	for(j=0;j<3;j++)
		    	   {
		    	   	printf("[%d]",mat[j][i]);
				   }
			}	
			printf("\n\n\n2)-\n");
            //Nous montrons le brouilleur de matelas.
			for(j=0;j<3;j++)
		    {
		    	printf("\n");
		    	for(i=0;i<3;i++)
		    	   {
		    	   	printf("[%d]",tro[i][j]);
				   }
			}
			/*Nous offrons des choix avec la possibilité de transférer la matrice du joueur.*/
			printf("\nChoose the correct answer : 1 || 2,\nPress 0 if you want to replace la matres.\n");
			scanf("%d",&b);
			if(b==1)
		  {
		  	*z=*z+1;
		  	*s=1;
		  }
		 else
		  {
		  	if(b==0)
		  	  {
		  	  	//Dans le cas d'une demande de transfert de la matrice des ulcérations.
		  	  	system("cls");
		  	  	printf("- Dictate you to matres.");
		  	  	//Remplissez les cases à cocher matres.
		  	  	for(i=0;i<3;i++)
		            {
		    	    for(j=0;j<3;j++)
		    	      {
		    	   	    printf("Tab[%d][%d]=??",i,j);
		    	   	    scanf("%d",&mat[i][j]);
				      }
		           	}
		  	  	system("cls");
		  	  	//Affichez la même question avec la nouvelle matrice.
                  		printf("\n\n10)- What is the conversion of the third matrix between the two proposals?\n");
		          for(i=0;i<3;i++)
		            {
		    	    printf("\n");
		    	    for(j=0;j<3;j++)
		    	      {
		    	   	    printf("[%d]",mat[i][j]);
				      }
		           	}
		           	//Recalculez la nouvelle référence Matrix et mettez-la dans les propositions.
			       a=i;
			       i=j;
			       j=a;
			      printf("\n\n\n1)-\n");
			      	for(j=0;j<3;j++)
		               {
		    	         printf("\n");
		    	        for(i=0;i<3;i++)
		    	          {
		    	   	        printf("[%d]",tro[i][j]);
				          }
			           }
			        printf("\n\n\n2)-\n");
	         		
			        for(i=0;i<3;i++)
		            {
		    	       printf("\n");
		    	       for(j=0;j<3;j++)
		    	         {
		    	   	       printf("[%d]",mat[j][i]);
				         }  
			        }
			        printf("\n- Choose the correct answer: 1 || 2,\n");
		        	scanf("%d",&b);
		        	if(b==2)
		             {
		  	          *z=*z+1;
		  	          *s=1;
		             }		  	     	
			  }
		  }
      }
/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~Autres opérations~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
       //Processus de test de toute valeur supérieure à deux dans le tableau.
	   int indice_min(int t[], int m, int n)
         {
             int i;
             int imin;
             imin=m;
             for (i=m+1; i<n; i++)
                if (t[i]<t[imin])
                    imin=i;
                return imin;
         }
       //Le processus d'échange de deux variables.
	   int permutte(int *a, int *b)
           {
              int c;
                 c=*a;
                 *a=*b;
                   *b=c;
           }
        //Processus de disposition des tables.
		int tri_selection(int t[], int n)
            {
              int m;
              int p;
                for (m=0; m<n-1; m++)
                   {
                   	//Testez quelles valeurs sont supérieures à deux paradis ultérieurs.
                       p=indice_min(t,m,n);
                          if (p!=m)
                          //En cas de deux places, nous changeons de rang.
                       permutte(&t[p],&t[m]);
                   }
            }
/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    int valeur(int *z)
	  {
		  //Le processus de détermination de la franchise pour les points.
		   if(4>*z && *z>=0)
		     {
		     	//Dans le cas où le point est restreint ici, nous afficherons ce texte.
		     	printf("[Weak]\n");
			 }
		   else
		     {
		         //Dans le cas où le point est restreint ici, nous afficherons ce texte.
		         if(*z<7 && *z>=4)
				   {
				   	  printf("[Average]\n");
				   }
				 else
				   {
				   	 //Dans le cas où le point est restreint ici, nous afficherons ce texte.*
				   	  if(10>*z && *z>=7)
				         {
				   	          printf("[Excellent]\n");
				         }
				   }	
			 }	 
      }
/*__________________________________________________________________________*/
    int fvaleur(int *z)
	  {
		  //Le processus de détermination de la franchise pour les points.
		   if(4>*z && *z>=0)
		     {
		     	//Dans le cas où le point est restreint ici, nous afficherons ce texte.
		     	fprintf(p,"[Weak]\n");
			 }
		   else
		     {
		         //Dans le cas où le point est restreint ici, nous afficherons ce texte.
		         if(*z<7 && *z>=4)
				   {
				   	  fprintf(p,"[Average]\n");
				   }
				 else
				   {
				   	 //Dans le cas où le point est restreint ici, nous afficherons ce texte.*
				   	  if(10>*z && *z>=7)
				         {
				   	          fprintf(p,"[Excellent]\n");
				         }
				   }	
			 }	 
      }      
